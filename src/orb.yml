version: 2.1
description: |
  Installs and configures the AWS command-line interface (awscli)

  View this orb on GitHub: https://github.com/CircleCI-Public/aws-cli-orb

  View this orb in CircleCI's Orb Registry: https://circleci.com/orbs/registry/orb/circleci/aws-cli

executors:
  default:
    description: |
      The Debian-based Docker container to use when
      installing/configuring the AWS CLI

    parameters:
      python-version:
        type: string
        default: "2.7"

      debian-release:
        type: string
        default: "stretch"

    docker:
      - image: circleci/python:<< parameters.python-version >>-<< parameters.debian-release >>

commands:
  install:
    description: |
      Install the AWS CLI via pip.

    steps:
      - run:
          name: Install AWS CLI
          command: |
            if [[ $(command -v pip) == "" ]]; then
              echo "pip is required to install AWS CLI and is not available"
              exit 1
            else
              if [[ $(command -v sudo) == "" ]]; then
                echo "sudo is required to install AWS CLI and is not available"
                exit 1
              else
                if [[ $(command -v aws) == "" ]]; then
                  sudo pip install awscli
                else
                  echo "AWS CLI is already installed"
                fi
              fi
            fi

  configure:
    description: |
      Configure and store AWS credentials in
      ~/.aws/credentials and ~/.aws/config

    parameters:
      profile-name:
        description: Profile name to be configured.
        type: string
        default: "default"

      aws-access-key-id:
        description: |
          AWS access key id for IAM role. Set this to the name of
          the environment variable you will use to hold this
          value, i.e. $AWS_ACCESS_KEY.
        type: string
        default: $AWS_ACCESS_KEY_ID

      aws-secret-access-key:
        description: |
          AWS secret key for IAM role. Set this to the name of
          the environment variable you will set to hold this
          value, i.e. $AWS_SECRET_ACCESS_KEY.
        type: string
        default: $AWS_SECRET_ACCESS_KEY

      aws-region:
        description: |
          AWS region to operate in
          (defaults to the value of $AWS_REGION)
        type: string
        default: $AWS_REGION

    steps:
      - run:
          name: Configure AWS Access Key ID
          command: |
            aws configure set aws_access_key_id \
            << parameters.aws-access-key-id >> \
            --profile << parameters.profile-name >>

      - run:
          name: Configure AWS Secret Access Key
          command: |
            aws configure set aws_secret_access_key \
            << parameters.aws-secret-access-key >> \
            --profile << parameters.profile-name >>

      - run:
          name: Configure AWS default region
          command: |
            aws configure set region << parameters.aws-region >> \
            --profile << parameters.profile-name >>

